for(wp in 1:length(levels(QUTO_wild_genind@pop))){
QUTO_wild_sumstats[wp,1] <- summary(seppop(QUTO_wild_genind)[[wp]])[[1]]
QUTO_wild_sumstats[wp,2] <- summary(seppop(QUTO_wild_genind)[[wp]])[[4]]
QUTO_wild_sumstats[wp,3] <- mean(allel.rich(seppop(QUTO_garden_wild_genind)[[wp]])$all.richness)
QUTO_wild_sumstats[wp,4] <- mean(summary(seppop(QUTO_wild_genind)[[wp]])[[7]])
}
QUTO_wild_sumstats
#name rows and columns
rownames <- c("SR","C","SCr","SCl")
#name rows and columns
rownames(QUTO_wild_sumstats) <- c("SR","C","SCr","SCl")
#name rows and columns
rownames(QUTO_wild_sumstats) <- c("SR","C","SCr","SCl")
colnames(QUTO_wild_sumstats) <- c("N","NAll","AllRich","HExp")
#create data frame
QUTO_garden_sumstats <- signif(cbind(QUTO_garden_ind, QUTO_garden_nall, QUTO_garden_allrich_mean, QUTO_garden_hexp_mean),3)
#create dataframe
QUTO_garden_wild_sumstats <- rbind(QUTO_garden_sumstats, QUTO_wild_sumstats)
View(QUTO_garden_wild_sumstats)
#write out data frame
write.csv(QUTO_sumstat_df, "Analyses/Results/Sum_Stats/QUTO_gendiv_sumstats_df.csv")
#write out data frame
write.csv(QUTO_garden_wild_sumstats, "Analyses/Results/Sum_Stats/QUTO_sumstats_df.csv")
levels(QUTO_wild_genind@pop)
###################################
#     Ex situ representation      #
###################################
##reorganize data files for representation analyses
levels(QUTO_wild_genind@pop) <- rep("Wild", 4)
levels(QUTO_wild_genind@pop)
#now reorganize genind object
QUTO_garden_wild_onepop_genind <- repool(QUTO_garden_genind, QUTO_wild_genind)
table(QUTO_garden_wild_onepop_genind@pop)
allel.rich(QUTO_garden_wild_onepop_genind)[[1]]
##create allelic richness dataframe
QUTO_allrich_df <- gather(as.data.frame(allel.rich(QUTO_garden_wild_onepop_genind)[[1]]))
library(tidyverse)
##create allelic richness dataframe
QUTO_allrich_df <- gather(as.data.frame(allel.rich(QUTO_garden_wild_onepop_genind)[[1]]))
QUTO_allrich_df
#create a data frame to store means and pvalue
QUTO_exsitu_gendiv_comp_df <- matrix(nrow = 3, ncol = 2)
QUTO_allrich_df[QUTO_allrich_df$key == "Garden"]
QUTO_allrich_df[QUTO_allrich_df$key == "Garden",]
mean(QUTO_allrich_df[QUTO_allrich_df$key == "Garden",]$value)
QUTO_exsitu_gendiv_comp_df[2,1] <- mean(QUTO_allrich_df[QUTO_allrich_df$key == "Wild",]$value)
QUTO_exsitu_gendiv_comp_df[3,1] <- kruskal.test(QUTO_allrich_df[,2]~QUTO_allrich_df[,1])[3]
QUTO_exsitu_gendiv_comp_df
#create a data frame to store means and pvalue
QUTO_exsitu_gendiv_comp_df <- matrix(nrow = 3, ncol = 2)
#save results
QUTO_exsitu_gendiv_comp_df[1,1] <- mean(QUTO_allrich_df[QUTO_allrich_df$key == "Garden",]$value)
QUTO_exsitu_gendiv_comp_df[2,1] <- mean(QUTO_allrich_df[QUTO_allrich_df$key == "Wild",]$value)
QUTO_exsitu_gendiv_comp_df
kruskal.test(QUTO_allrich_df[,2]~QUTO_allrich_df[,1])[3]
kruskal.test(QUTO_allrich_df[,2]~QUTO_allrich_df[,1])[[3]]
QUTO_exsitu_gendiv_comp_df[3,1] <- kruskal.test(QUTO_allrich_df[,2]~QUTO_allrich_df[,1])[[3]]
summary(QUTO_wild_genind)[[1]])
summary(QUTO_wild_genind)[[1]]
summary(QUTO_wild_genind)[[7]]
cbind(summary(QUTO_garden_genind)[[7]],summary(QUTO_wild_genind)[[7]])
QUTO_hexp_df <- cbind(summary(QUTO_garden_genind)[[7]],summary(QUTO_wild_genind)[[7]])
colnames(QUTO_hexp_df) <- c("Garden", "Wild")
QUTO_hexp_g_df <- gather(QUTO_hexp_df)
QUTO_hexp_g_df <- gather(as.data.frame(QUTO_hexp_df))
QUTO_hexp_g_df
##hexp
QUTO_exsitu_gendiv_comp_df[1,2] <- mean(QUTO_hexp_g_df[QUTO_hexp_g_df$key == "Garden",]$value)
QUTO_exsitu_gendiv_comp_df[2,2] <- mean(QUTO_hexp_g_df[QUTO_hexp_g_df$key == "Wild",]$value)
QUTO_exsitu_gendiv_comp_df[3,2] <- kruskal.test(QUTO_hexp_g_df[,2]~QUTO_hexp_g_df[,1])[[3]]
QUTO_exsitu_gendiv_comp_df
##write out data frame
write.csv(QUTO_exsitu_gendiv_comp_df, "Analyses/Results/Garden_Wild_Comparison/QUTO_exsitu_gendiv_comp_df.csv")
rownames(QUTO_exsitu_gendiv_comp_df) <- c("Garden", "Wild", "p-value")
colnames(QUTO_exsitu_gendiv_comp_df) <- c("AllRich", "HExp")
##write out data frame
write.csv(QUTO_exsitu_gendiv_comp_df, "Analyses/Results/Garden_Wild_Comparison/QUTO_exsitu_gendiv_comp_df.csv")
is.data.frame(QUTO_allrich_df)
QUTO_allrich_df
###make a boxplot of the garden/wild comparisons
ggplot(QUTO_allrich_df, aes(x = key, y = value)) + geom_boxplot()
###make a boxplot of the garden/wild comparisons
ggplot(QUTO_allrich_df, aes(x = key, y = value, col = key)) +
geom_boxplot() + scale_color_manual(c("green", "purple"))
?scale_color_manual
###make a boxplot of the garden/wild comparisons
ggplot(QUTO_allrich_df, aes(x = key, y = value, col = key)) +
geom_boxplot() + scale_color_manual(values = c("green", "purple"))
###make a boxplot of the garden/wild comparisons
ggplot(QUTO_allrich_df, aes(x = key, y = value, fill = key)) +
geom_boxplot() + scale_color_manual(values = c("green", "purple"))
colnames(QUTO_allrich_df) <- c("Population Type", "Allelic Richness")
colnames(QUTO_allrich_df)
QUTO_allrich_df
###make a boxplot of the garden/wild comparisons
ggplot(QUTO_allrich_df, aes(x = key, y = value, fill = key)) +
geom_boxplot() + scale_color_manual(values = c("green", "purple"))
###make a boxplot of the garden/wild comparisons
ggplot(QUTO_allrich_df, aes(x = Population Type, y = Allelic Richness, fill = key)) +
###make a boxplot of the garden/wild comparisons
ggplot(QUTO_allrich_df, aes(x = "Population Type", y = "Allelic Richness", fill = "Population Type")) +
geom_boxplot() + scale_color_manual(values = c("green", "purple"))
colnames(QUTO_allrich_df) <- c("Population_Type", "Allelic_Richness")
QUTO_allrich_df
###make a boxplot of the garden/wild comparisons
ggplot(QUTO_allrich_df, aes(x = Population_Type, y = Allelic_Richness, fill = Population_Type)) +
geom_boxplot() + scale_color_manual(values = c("green", "purple"))
QUTO_exsitu_gendiv_comp_df
seppop(QUTO_garden_wild_genind)[[2]]
seppop(QUTO_garden_wild_genind)[[3]]
#########
#     Allelic Representation
#convert the wild genind object to a genpop object
sp_wild_genpop <- genind2genpop(seppop(QUTO_garden_wild_onepop_genind)[2]$Wild)
###################################
#     Allelic Representation      #
###################################
#convert the wild genind object to a genpop object
QUTO_wild_genpop <- genind2genpop(seppop(QUTO_garden_wild_onepop_genind)[2]$Wild)
QUTO_garden_wild_onepop_genind
levels(QUTO_garden_wild_onepop_genind@pop)
#create documents for comparison
n_ind_W <- nrow(seppop(QUTO_garden_wild_onepop_genind)[[2]]@tab);  n_ind_G <- nrow(seppop(QUTO_garden_wild_onepop_genind)[[1]]@tab);
n_ind_W
n_ind_G
QUTO_all_rep <- colSums(seppop(QUTO_garden_wild_onepop_genind)[[1]]@tab,na.rm=T)
#first calculate the frequency categories of alleles in the wild individuals
QUTO_all_cat <- get.allele.cat(QUTO_wild_genpop, 1, 1, n_ind_W, n_drop = 0, glob_only = TRUE)
source("Analyses/Fa_sample_funcs.R")
#first calculate the frequency categories of alleles in the wild individuals
QUTO_all_cat <- get.allele.cat(QUTO_wild_genpop, 1, 1, n_ind_W, n_drop = 0, glob_only = TRUE)
length(dup_reps)
#
dup_reps <- c(0:9)
dup_reps
length(all_cat_list)
###################################
#     Allelic Representation      #
###################################
#convert the wild genind object to a genpop object
QUTO_wild_genpop <- genind2genpop(seppop(QUTO_garden_wild_onepop_genind)[2]$Wild)
#create documents for comparison
n_ind_W <- nrow(seppop(QUTO_garden_wild_onepop_genind)[[2]]@tab);  n_ind_G <- nrow(seppop(QUTO_garden_wild_onepop_genind)[[1]]@tab);
QUTO_all_rep <- colSums(seppop(QUTO_garden_wild_onepop_genind)[[1]]@tab,na.rm=T)
#first calculate the frequency categories of alleles in the wild individuals
QUTO_all_cat <- get.allele.cat(QUTO_wild_genpop, 1, 1, n_ind_W, n_drop = 0, glob_only = TRUE)
#alleles existing
QUTO_all_exist_df <- matrix(nrow = length(dup_reps), ncol = length(all_cat_list))
QUTO_wild_cap_df <- matrix(nrow = length(dup_reps), ncol = length(all_cat_list))
QUTO_all_rep <- matrix(nrow = length(dup_reps), ncol = length(all_cat_list))
#alleles existing
QUTO_all_exist_df <- matrix(nrow = length(dup_reps), ncol = length(all_cat_list))
QUTO_garden_rep_df <- matrix(nrow = length(dup_reps), ncol = length(all_cat_list))
QUTO_garden_rep_per_df <- matrix(nrow = length(dup_reps), ncol = length(all_cat_list))
#loop to calculate allelic representation
for(dup in dup_reps){
for(cat in 1:length(all_cat_list)){
#first save all of the existing wild alleles
QUTO_all_exist_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup_reps))
#now count the alleles represented in each category ex situ
QUTO_garden_rep_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup_reps)/length(QUTO_all_cat[[cat]]),4)
#save in a presentation data frame
QUTO_garden_rep_per_df[dup+1,cat] <- paste0(signif((QUTO_garden_rep_df[,cat]*100),3), "% (", signif(sp_all_exist_df[,cat],3), ")")
}
}
#remove regional alleles from QUTO all cat
QUTO_all_cat <- QUTO_all_cat[1:5]
#alleles existing
QUTO_all_exist_df <- matrix(nrow = length(dup_reps), ncol = length(all_cat_list))
QUTO_garden_rep_df <- matrix(nrow = length(dup_reps), ncol = length(all_cat_list))
QUTO_garden_rep_per_df <- matrix(nrow = length(dup_reps), ncol = length(all_cat_list))
#loop to calculate allelic representation
for(dup in dup_reps){
for(cat in 1:length(all_cat_list)){
#first save all of the existing wild alleles
QUTO_all_exist_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup_reps))
#now count the alleles represented in each category ex situ
QUTO_garden_rep_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup_reps)/length(QUTO_all_cat[[cat]]),4)
#save in a presentation data frame
QUTO_garden_rep_per_df[dup+1,cat] <- paste0(signif((QUTO_garden_rep_df[,cat]*100),3), "% (", signif(sp_all_exist_df[,cat],3), ")")
}
}
QUTO_all_rep
QUTO_all_rep <- colSums(seppop(QUTO_garden_wild_onepop_genind)[[1]]@tab,na.rm=T)
QUTO_all_rep
#loop to calculate allelic representation
for(dup in dup_reps){
for(cat in 1:length(all_cat_list)){
#first save all of the existing wild alleles
QUTO_all_exist_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup_reps))
#now count the alleles represented in each category ex situ
# QUTO_garden_rep_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup_reps)/length(QUTO_all_cat[[cat]]),4)
#save in a presentation data frame
#QUTO_garden_rep_per_df[dup+1,cat] <- paste0(signif((QUTO_garden_rep_df[,cat]*100),3), "% (", signif(sp_all_exist_df[,cat],3), ")")
}
}
QUTO_all_exist_df
QUTO_all_cat
QUTO_all_rep <- colSums(seppop(QUTO_garden_wild_onepop_genind)[[1]]@tab,na.rm=T)
QUTO_all_rep
#loop to calculate allelic representation
for(dup in dup_reps){
for(cat in 1:length(QUTO_all_cat)){
#first save all of the existing wild alleles
QUTO_all_exist_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup_reps))
#now count the alleles represented in each category ex situ
# QUTO_garden_rep_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup_reps)/length(QUTO_all_cat[[cat]]),4)
#save in a presentation data frame
#QUTO_garden_rep_per_df[dup+1,cat] <- paste0(signif((QUTO_garden_rep_df[,cat]*100),3), "% (", signif(sp_all_exist_df[,cat],3), ")")
}
}
QUTO_all_exist_df
dup_reps
#loop to calculate allelic representation
for(dup in dup_reps){
for(cat in 1:length(QUTO_all_cat)){
#first save all of the existing wild alleles
QUTO_all_exist_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup))
#now count the alleles represented in each category ex situ
# QUTO_garden_rep_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup_reps)/length(QUTO_all_cat[[cat]]),4)
#save in a presentation data frame
#QUTO_garden_rep_per_df[dup+1,cat] <- paste0(signif((QUTO_garden_rep_df[,cat]*100),3), "% (", signif(sp_all_exist_df[,cat],3), ")")
}
}
QUTO_all_exist_df
#loop to calculate allelic representation
for(dup in dup_reps){
for(cat in 1:length(QUTO_all_cat)){
#first save all of the existing wild alleles
QUTO_all_exist_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup))
#now count the alleles represented in each category ex situ
QUTO_garden_rep_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup)/length(QUTO_all_cat[[cat]]),4)
#save in a presentation data frame
#QUTO_garden_rep_per_df[dup+1,cat] <- paste0(signif((QUTO_garden_rep_df[,cat]*100),3), "% (", signif(sp_all_exist_df[,cat],3), ")")
}
}
#loop to calculate allelic representation
for(dup in dup_reps){
for(cat in 1:length(QUTO_all_cat)){
#first save all of the existing wild alleles
QUTO_all_exist_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup))
#now count the alleles represented in each category ex situ
QUTO_garden_rep_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup)/length(QUTO_all_cat[[cat]]),4)
#save in a presentation data frame
QUTO_garden_rep_per_df[dup+1,cat] <- paste0(signif((QUTO_garden_rep_df[,cat]*100),3), "% (", signif(QUTO_all_exist_df[,cat],3), ")")
}
}
#loop to calculate allelic representation
for(dup in dup_reps){
for(cat in 1:length(QUTO_all_cat)){
#first save all of the existing wild alleles
QUTO_all_exist_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup))
#now count the alleles represented in each category ex situ
QUTO_garden_rep_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup)/length(QUTO_all_cat[[cat]]),4)
#save in a presentation data frame
QUTO_garden_rep_per_df[dup+1,cat] <- paste0(signif((QUTO_garden_rep_df[dup,cat]*100),3), "% (", signif(QUTO_all_exist_df[dup,cat],3), ")")
}
}
QUTO_garden_rep_per_df
#loop to calculate allelic representation
for(dup in dup_reps){
for(cat in 1:length(QUTO_all_cat)){
#first save all of the existing wild alleles
QUTO_all_exist_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup))
#now count the alleles represented in each category ex situ
QUTO_garden_rep_df[dup+1,cat] <- round(sum(QUTO_all_rep[QUTO_all_cat[[cat]]] > dup)/length(QUTO_all_cat[[cat]]),4)
#save in a presentation data frame
QUTO_garden_rep_per_df[dup+1,cat] <- paste0(signif((QUTO_garden_rep_df[dup+1,cat]*100),3), "% (", signif(QUTO_all_exist_df[dup+1,cat],3), ")")
}
}
QUTO_garden_rep_per_df
QUTO_garden_rep_df
signif(QUTO_garden_rep_df*100,3)
QUTO_all_rep_df <- as.data.frame(signif(QUTO_garden_rep_df*100,3))
colnames(QUTO_all_rep_df) <- c("Global","Very_Common", "Common", "Low_Frequency","Rare")
rownames(QUTO_all_rep_df)
rownames(QUTO_all_rep_df) <- paste0(rownames(QUTO_all_rep_df), "or_more_copies")
gather(QUTO_all_rep_df)
QUTO_all_rep_g_df <- gather(QUTO_all_rep_df)
colnames(QUTO_all_rep_df) <- c("Global","Very_Common", "Common", "Low_Frequency","Rare")
QUTO_all_rep_df
##reduce data frame for presentation
QUTO_all_rep_df <- QUTO_all_rep_df[,-2]
QUTO_all_rep_df
#remove most copies; leave 1,2,5,10
QUTO_all_rep_df <- QUTO_all_rep_df[-c(3,4,6,7,8,9),]
QUTO_all_rep_df
#now transform data frame to plot
QUTO_all_rep_g_df <- gather(QUTO_all_rep_df)
QUTO_all_rep_g_df
QUTO_all_rep_g_df$copy_num <- rep(c("1_or_more", "2_or_more","5_or_more","10_or_more"),4)
QUTO_all_rep_g_df
colnames(QUTO_all_rep_g_df) <- c("Allele_Type", "Per_Rep", "Copy_Number")
ggplot(QUTO_all_rep_g_df, aes(fill = Allele_Type,
x = Copy_Number,
y = Per_Rep)) +
geom_bar(position="dodge",stat="identity") +
facet_wrap(~species, scale="free") +
scale_fill_manual(values = c("red", "darkorange3","coral","deeppink")) +
xlab("Allele Copies") +
ylab("Percent Allelic Representation") +
theme_bw()
ggplot(QUTO_all_rep_g_df, aes(fill = Allele_Type,
x = Copy_Number,
y = Per_Rep)) +
geom_bar(position="dodge",stat="identity") +
scale_fill_manual(values = c("red", "darkorange3","coral","deeppink")) +
xlab("Allele Copies") +
ylab("Percent Allelic Representation") +
theme_bw()
ggplot(QUTO_all_rep_g_df, aes(fill = Allele_Type,
x = Copy_Number,
y = Per_Rep)) +
geom_bar(position="dodge",stat="identity") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "darkorange3","coral","deeppink")) +
xlab("Allele Copies") +
ylab("Percent Allelic Representation") +
theme_bw()
QUTO_all_rep_g_df$Allele_Type <- as.factor(QUTO_all_rep_g_df$Allele_Type,
c("Global", "Common","Low_Frequency","Rare"))
QUTO_all_rep_g_df$Allele_Type <- as.factor(c("Global", "Common","Low_Frequency","Rare"))
##
ggplot(QUTO_all_rep_g_df, aes(fill = Allele_Type,
x = Copy_Number,
y = Per_Rep)) +
geom_bar(position="dodge",stat="identity") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "darkorange3","coral","deeppink")) +
xlab("Allele Copies") +
ylab("Percent Allelic Representation") +
theme_bw()
#now transform data frame to plot
QUTO_all_rep_g_df <- gather(QUTO_all_rep_df)
QUTO_all_rep_g_df$copy_num <- rep(c("1_or_more", "2_or_more","5_or_more","10_or_more"),4)
as.factor(QUTO_all_rep_g_df$Allele_Type)
QUTO_all_rep_g_df$Allele_Type
#now transform data frame to plot
QUTO_all_rep_g_df <- gather(QUTO_all_rep_df)
QUTO_all_rep_g_df$copy_num <- rep(c("1_or_more", "2_or_more","5_or_more","10_or_more"),4)
QUTO_all_rep_g_df
QUTO_all_rep_g_df$key
as.factor(QUTO_all_rep_g_df$key)
#now transform data frame to plot
QUTO_all_rep_g_df <- gather(QUTO_all_rep_df)
QUTO_all_rep_g_df$key <- as.factor(QUTO_all_rep_g_df$key)
QUTO_all_rep_g_df$copy_num <- rep(c("1_or_more", "2_or_more","5_or_more","10_or_more"),4)
colnames(QUTO_all_rep_g_df) <- c("Allele_Type", "Per_Rep", "Copy_Number")
QUTO_all_rep_g_df
is.data.frame(QUTO_all_rep_g_df)
##
ggplot(QUTO_all_rep_g_df, aes(fill = Allele_Type,
x = Copy_Number,
y = Per_Rep)) +
geom_bar(position="dodge",stat="identity") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "darkorange3","coral","deeppink")) +
xlab("Allele Copies") +
ylab("Percent Allelic Representation") +
theme_bw()
QUTO_all_rep_g_df$Allele_Type
QUTO_all_rep_g_df
QUTO_all_rep_g_df$Allele_Type <- factor(QUTO_all_rep_g_df$Allele_Type,                                    # Change ordering manually
levels = c("Global","Common",
"Low_Frequency",
"Rare"))
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "darkorange3","coral","deeppink")) +
xlab("Allele Copies") +
ylab("Percent Allelic Representation") +
theme_bw()
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "darkorange3","coral","darkorchid1")) +
xlab("Allele Copies") +
ylab("Percent Allelic Representation") +
theme_bw()
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "darkorange1","coral","darkorchid1")) +
xlab("Allele Copies") +
ylab("Percent Allelic Representation") +
theme_bw()
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "darkorange1","darksalmon","darkorchid1")) +
xlab("Allele Copies") +
ylab("Percent Allelic Representation") +
theme_bw()
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity", color = "black") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "darkorange1","darksalmon","darkorchid1")) +
xlab("Allele Copies") +
ylab("Percent Allelic Representation") +
theme_bw()
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity", color = "black") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "darkorange1","lightpink1","darkorchid1")) +
xlab("Allele Copies") +
ylab("Percent Allelic Representation") +
theme_bw()
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity", color = "black") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "hotpink","lightpink1","darkorchid1")) +
xlab("Allele Copies") +
ylab("Percent Allelic Representation") +
theme_bw()
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity", color = "black") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "hotpink","lightpink1","darkorchid1")) +
xlab("Allele Copies") +
ylab("% Allelic Representation") +
theme_bw()
QUTO_all_rep_g_df$Copy_Number
#change the orders of the representation barplots
QUTO_all_rep_g_df$Allele_Type <- factor(QUTO_all_rep_g_df$Copy_Number,
levels = c("1_or_more",
"2_or_more",
"5_or_more",
"10_or_more"))
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity", color = "black") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "hotpink","lightpink1","darkorchid1")) +
xlab("Allele Copies") +
ylab("% Allelic Representation") +
theme_bw()
#change the orders of the representation barplots
QUTO_all_rep_g_df$Allele_Type <- factor(QUTO_all_rep_g_df$Copy_Number,
levels = rep(c("1_or_more",
"2_or_more",
"5_or_more",
"10_or_more"),4))
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity", color = "black") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "hotpink","lightpink1","darkorchid1")) +
xlab("Allele Copies") +
ylab("% Allelic Representation") +
theme_bw()
#change the orders of the representation barplots
QUTO_all_rep_g_df$Allele_Type <- factor(QUTO_all_rep_g_df$Copy_Number,
levels = rep(c("1_or_more",
"2_or_more",
"5_or_more",
"10_or_more",
"1_or_more",
"2_or_more",
"5_or_more",
"10_or_more",
"1_or_more",
"2_or_more",
"5_or_more",
"10_or_more",
"1_or_more",
"2_or_more",
"5_or_more",
"10_or_more")))
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity", color = "black") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "hotpink","lightpink1","darkorchid1")) +
xlab("Allele Copies") +
ylab("% Allelic Representation") +
theme_bw()
#now transform data frame to plot
QUTO_all_rep_g_df <- gather(QUTO_all_rep_df)
QUTO_all_rep_g_df$copy_num <- rep(c("1_or_more", "2_or_more","5_or_more","10_or_more"),4)
colnames(QUTO_all_rep_g_df) <- c("Allele_Type", "Per_Rep", "Copy_Number")
#change the orders of bars by frequency
QUTO_all_rep_g_df$Allele_Type <- factor(QUTO_all_rep_g_df$Allele_Type,
levels = c("Global","Common",
"Low_Frequency",
"Rare"))
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity", color = "black") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "hotpink","lightpink1","darkorchid1")) +
xlab("Allele Copies") +
ylab("% Allelic Representation") +
theme_bw()
#now transform data frame to plot
QUTO_all_rep_g_df <- gather(QUTO_all_rep_df)
QUTO_all_rep_g_df$copy_num <- rep(c("01_or_more", "02_or_more","05_or_more","10_or_more"),4)
colnames(QUTO_all_rep_g_df) <- c("Allele_Type", "Per_Rep", "Copy_Number")
#change the orders of bars by frequency
QUTO_all_rep_g_df$Allele_Type <- factor(QUTO_all_rep_g_df$Allele_Type,
levels = c("Global","Common",
"Low_Frequency",
"Rare"))
##
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity", color = "black") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "hotpink","lightpink1","darkorchid1")) +
xlab("Allele Copies") +
ylab("% Allelic Representation") +
theme_bw()
##save the allelic representation barplots
pdf("Analyses/Results/Allelic_Representation/QUTO_all_rep.pdf", height = 6, width = 6)
ggplot(QUTO_all_rep_g_df, aes(x = Copy_Number, y = Per_Rep, fill = Allele_Type)) +
geom_bar(position="dodge",stat="identity", color = "black") + ylim(c(0,100))+
scale_fill_manual(values = c("red", "hotpink","lightpink1","darkorchid1")) +
xlab("Allele Copies") +
ylab("% Allelic Representation") +
theme_bw()
dev.off()
